Relational (SQL) databases: PostgreSQL, MySQL, Microsoft SQL Server
NoSQL databases: MongoDB, Redis

Relational PROS:
    structured data
    support ACID: Atomicity, Consistency, Isolation, Durability
    follows Normalization rules

Relational CONS:
    do not scale horizontally very well, only vertically
    separately in different tables, which means lots of join's, affect performance
    Handling lots (several Terabytes) of data is very costly and you will have to increase the hardware for scaling


NoSQL PROS:
    scale out horizontally and work with unstructured and semi-structured data
    Capable of handling lots of data.
    As it is schema-less and table free, it offers a high level of flexibility with data models.

NoSQL CONS:
    Weaker consistency (BASE principle) compared to ACID.
    new, they are far less stable and may have a lot less functionality.
    often less easy to use compared to Relational DBs., stores unstructured or semistructured data


library_db.db3 - exactly .db3 cause our project is a library. db3 - last version of sqllite
![](shema.png)

таблица всегда в множественном числе
В бд вместо string юзают varchar и указывают макс. размер строки

зачем primary key? - есть 2 Тараса Шевченка, один 19век, другой 21-й, другой написал модерн. Как различить их? -
по primary key. - INTEGER, NOT NULL, AUTOINCREMENT
при добавлении колонки sqllite удаляет полностью таблицу и создает новую с актуальными колонками

будем привязывать таблицы из sqllite @dataclass python, изменяя @dataclass это будет записываться в бд


